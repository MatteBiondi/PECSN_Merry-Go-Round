[General]
repeat = 10
seed-set = ${repetition}

# Represents the time after which children start ot get tired of standing in queues.
# Respectively, in seconds, {5, 7, 10, 12, 15} minutes
#**.childPool.Q 		= ${300, 420, 600, 720, 900} 

# The mean of exponential distribution ( unit of time [seconds] for dropping queue)
#**.childPool.Delta	= 300

# Represents {0.5, 1, 3} arrival(s) at minute. The mean of exponential distribution 
# ( unit of time [seconds] for next arrival, a.k.a inter-arrival time )
#**.childPool.Lambda	= ${120, 60, 20}	

# Prob. of success. Mean = {1, 4} people at each arrival
#**.childPool.P		= ${1, 1/4} 

# Threshold to start the Merry-Go-Round when it is not full
#**.owner.v_fraction = ${0.25, 0.50, 0.75, 1}

# Number of seats of the Merry-Go-Round 
#**.owner.N 			= ${6, 12, 24, 36}

# Number of coin(s) earned for each child who ennjoys a ride
#**.owner.c 			= ${1, 2}

# Time duration of one Merry-Go-Round ride
#**.merryGoRound.T 	= ${120, 180, 240, 300}
[Validation]
network = ValidationNetwork
sim-time-limit = 1h

# Represents the time after which children start ot get tired of standing in queues.
**.dummyChildPool.Q 		= 3600

# Time between two arrivals
**.dummyChildPool.interarrivalTime = 10

# Children group size
**.dummyChildPool.bulk = 1

# Threshold to start the Merry-Go-Round when it is not full
**.owner.v_fraction = 1

# Number of seats of the Merry-Go-Round 
**.owner.N 			= 24

# Number of coin(s) earned for each child who ennjoys a ride
**.owner.c 			= 1

# Time duration of one Merry-Go-Round ride
**.merryGoRound.T 	= 120
 